{"version":3,"sources":["../assets/scripts/main.js","main.js","../assets/scripts/modules/app.js","../assets/scripts/services/advert.js","../assets/scripts/services/advertiser.js","../assets/scripts/services/api.js","../assets/scripts/services/auth.js","../assets/scripts/directives/adverts.js","../assets/scripts/directives/popup.js","../assets/scripts/controllers/advert.js","../assets/scripts/controllers/advertiser.js","../assets/scripts/controllers/auth.js","../assets/scripts/controllers/popup.js","../assets/scripts/controllers/profile.js"],"names":["_classCallCheck","instance","Constructor","TypeError","getModules","services","angular","module","auth","popup","advert","advertiser","profile","app","advertServicesInit","factory","ajax","getRequestData","data","requestData","api_base","type","method","url","_id","makeApiCall","get","getAll","create","update","remove","advertiserServicesInit","$http","apiBase","id","bodyData","save","apiGenServicesInit","options","calls","generateCall","call_options","toUpperCase","params","param","hasOwnProperty","replace","generate","settings","option","call","authServicesInit","authenticate","Promise","resolve","reject","then","response","err","advertDirectivesInit","templatesFolder","directive","restrict","templateUrl","scope","user_id","filter_enabled","controller","controllerAs","filter_fields","advert_id","popupDirectivesInit","transclude","trigger","content","advertControllersInit","schema","$scope","api","_this","this","adverts","one","all","user","order","getAdverts","console","log","defaults","gender","_this2","post","age","success","document","location","href","_this3","put","current_advert","parseInt","JSON","parse","stringify","reset","redirect","message","cancel","$parent","active","advertiserControllersInit","authControllersInit","$timeout","authService","_this4","emailRegex","passwordRegex","checkForm","form","error","$valid","validClass","submit","email","$setTouched","password","responseClass","reload","logout","popupControllersInit","profileControllersInit","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","Portfolio","modules","value","components","index","initComponents","portfolio","init"],"mappings":"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","file":"main.js","sourcesContent":["\"use strict\";\r\n\r\nclass Portfolio {\r\n    constructor ( modules ) {\r\n        this.modules = modules;\r\n    }\r\n\r\n    initComponents ( module, components ) {\r\n        for ( let index = 0; index < components.length; index++ ) {\r\n            components[ index ](this.modules[ module ]);\r\n        }\r\n    }\r\n\r\n    init ( components ) {\r\n        for ( let module in components ) {\r\n            if ( components.hasOwnProperty(module) ) {\r\n                this.initComponents(module, components[ module ]);\r\n            }\r\n        }\r\n    }\r\n}\r\nconst modules = getModules();\r\nconst components = {\r\n    services : [\r\n        apiGenServicesInit,\r\n        authServicesInit,\r\n        advertiserServicesInit,\r\n        advertServicesInit\r\n    ],\r\n    auth : [\r\n        authControllersInit\r\n    ],\r\n    popup : [\r\n        popupControllersInit,\r\n        popupDirectivesInit\r\n    ],\r\n    advert : [\r\n        advertControllersInit,\r\n        advertDirectivesInit\r\n    ],\r\n    advertiser : [\r\n        advertiserControllersInit\r\n    ],\r\n    profile : [\r\n        profileControllersInit\r\n    ]\r\n};\r\n\r\nconst portfolio = new Portfolio(modules);\r\n\r\nportfolio.init(components);","\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Portfolio = function () {\n    function Portfolio(modules) {\n        _classCallCheck(this, Portfolio);\n\n        this.modules = modules;\n    }\n\n    _createClass(Portfolio, [{\n        key: \"initComponents\",\n        value: function initComponents(module, components) {\n            for (var index = 0; index < components.length; index++) {\n                components[index](this.modules[module]);\n            }\n        }\n    }, {\n        key: \"init\",\n        value: function init(components) {\n            for (var module in components) {\n                if (components.hasOwnProperty(module)) {\n                    this.initComponents(module, components[module]);\n                }\n            }\n        }\n    }]);\n\n    return Portfolio;\n}();\n\nvar modules = getModules();\nvar components = {\n    services: [apiGenServicesInit, authServicesInit, advertiserServicesInit, advertServicesInit],\n    auth: [authControllersInit],\n    popup: [popupControllersInit, popupDirectivesInit],\n    advert: [advertControllersInit, advertDirectivesInit],\n    advertiser: [advertiserControllersInit],\n    profile: [profileControllersInit]\n};\n\nvar portfolio = new Portfolio(modules);\n\nportfolio.init(components);\n\"use strict\";\n\nfunction getModules() {\n    return {\n        services: angular.module(\"services\", []),\n        auth: angular.module(\"auth\", []),\n        popup: angular.module(\"popup\", []),\n        advert: angular.module(\"advert\", []),\n        advertiser: angular.module(\"advertiser\", []),\n        profile: angular.module(\"profile\", []),\n        app: angular.module(\"app\", [\"services\", \"auth\", \"popup\", \"advert\", \"advertiser\", \"profile\"])\n    };\n}\n\"use strict\";\n\nfunction advertServicesInit(module) {\n    module.factory('adverts', [\"$http\", function (ajax) {\n\n        var getRequestData = function getRequestData(data) {\n            var requestData = {};\n            var api_base = \"/api/advert\";\n\n            switch (data.type) {\n                case \"get\":\n                    requestData.method = \"get\";\n                    requestData.url = api_base + \"/\" + data._id;\n                    break;\n                case \"getAll\":\n                    requestData.method = \"get\";\n                    requestData.url = api_base;\n                    break;\n                case \"update\":\n                    requestData.method = \"put\";\n                    requestData.url = api_base + \"/\" + data._id;\n                    break;\n                case \"create\":\n                    requestData.method = \"post\";\n                    requestData.url = \"\" + api_base;\n                    break;\n                case \"remove\":\n                    requestData.method = \"get\";\n                    requestData.url = api_base + \"/\" + data._id + \"/delete\";\n                    break;\n            }\n\n            if (data.requestData) {\n                requestData.data = data.requestData;\n            }\n\n            return requestData;\n        };\n\n        var makeApiCall = function makeApiCall(data) {\n            var requestData = getRequestData(data);\n\n            return ajax(requestData);\n        };\n\n        var get = function get(_id) {\n            return makeApiCall({ type: \"get\", _id: _id });\n        };\n\n        var getAll = function getAll() {\n            return makeApiCall({ type: \"getAll\" });\n        };\n\n        var create = function create(requestData) {\n            return makeApiCall({ type: \"create\", requestData: requestData });\n        };\n\n        var update = function update(_id, requestData) {\n            return makeApiCall({ type: \"update\", _id: _id, requestData: requestData });\n        };\n\n        var remove = function remove(_id) {\n            return makeApiCall({ type: \"remove\", _id: _id });\n        };\n\n        return {\n            get: get,\n            getAll: getAll,\n            create: create,\n            update: update,\n            remove: remove\n        };\n    }]);\n}\n\"use strict\";\n\nfunction advertiserServicesInit(module) {\n    module.factory('advertiser', [\"$http\", function ($http) {\n\n        var getRequestData = function getRequestData(data) {\n            var requestData = {};\n            var apiBase = \"/api/advertiser\";\n\n            switch (data.type) {\n                case \"get\":\n                    break;\n                case \"update\":\n                    break;\n                case \"remove\":\n                    requestData.method = \"GET\";\n                    requestData.url = apiBase + \"/\" + data.id + \"/delete\";\n                    break;\n            }\n\n            if (data.bodyData) {\n                requestData.data = data.bodyData;\n            }\n\n            return requestData;\n        };\n\n        var makeApiCall = function makeApiCall(data) {\n            var requestData = getRequestData(data);\n            return $http(requestData);\n        };\n\n        var get = function get() {};\n\n        var save = function save() {};\n\n        var remove = function remove(id) {\n            return makeApiCall({ type: \"remove\", id: id });\n        };\n\n        var update = function update() {};\n\n        return {\n            get: get,\n            save: save,\n            remove: remove,\n            update: update\n        };\n    }]);\n}\n\"use strict\";\n\nfunction apiGenServicesInit(module) {\n    module.factory(\"api\", [\"$http\", function (ajax) {\n        var options = {\n            api_base: \"\",\n            url: \"\"\n        };\n\n        var calls = {};\n\n        var generateCall = function generateCall(method, call_options) {\n            method = method.toUpperCase();\n            call_options.url = call_options.url || options.url;\n\n            var requestData = {\n                method: method,\n                url: \"\" + options.api_base + call_options.url\n            };\n\n            return function (params) {\n\n                for (var param in params) {\n                    if (params.hasOwnProperty(param)) {\n                        if (param !== \"data\") {\n                            requestData.url = requestData.url.replace(\":\" + param, params[param]);\n                        } else if (method !== \"GET\") {\n                            requestData.data = params[param];\n                        }\n                    }\n                }\n\n                return ajax(requestData);\n            };\n        };\n\n        var generate = function generate(settings) {\n            for (var option in settings.options) {\n                if (settings.options.hasOwnProperty(option)) {\n                    options[option] = settings.options[option];\n                }\n            }\n\n            for (var method in settings.calls) {\n                if (settings.calls.hasOwnProperty(method)) {\n                    for (var call in settings.calls[method]) {\n                        if (settings.calls[method].hasOwnProperty(call)) {\n                            calls[call] = generateCall(method, settings.calls[method][call]);\n                        }\n                    }\n                }\n            }\n\n            return calls;\n        };\n\n        return {\n            generate: generate\n        };\n    }]);\n}\n\"use strict\";\n\nfunction authServicesInit(module) {\n    module.factory('authService', [\"$http\", function ($http) {\n\n        var getRequestData = function getRequestData(type, data) {\n            var requestData = {};\n\n            switch (type) {\n                case \"login\":\n                    requestData.method = \"POST\";\n                    requestData.url = \"/auth/login\";\n                    break;\n                case \"registration\":\n                    requestData.method = \"POST\";\n                    requestData.url = \"/auth\";\n                    break;\n                case \"logout\":\n                    requestData.method = \"GET\";\n                    requestData.url = \"/auth/logout\";\n                    break;\n            }\n\n            if (data) {\n                requestData.data = data;\n            }\n\n            return requestData;\n        };\n\n        var authenticate = function authenticate(type, data) {\n\n            var requestData = getRequestData(type, data);\n\n            return new Promise(function (resolve, reject) {\n                $http(requestData).then(function (response) {\n                    resolve(response);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        };\n\n        return {\n            authenticate: authenticate\n        };\n    }]);\n}\n\"use strict\";\n\nfunction advertDirectivesInit(module) {\n    var templatesFolder = \"/assets/templates\";\n\n    module.directive('advertsFeed', [function () {\n\n        return {\n            restrict: 'A',\n            templateUrl: templatesFolder + \"/adverts-feed.html\",\n            scope: {\n                user_id: \"@advertsFeed\",\n                filter_enabled: \"=enableFilter\"\n            },\n            controller: \"advertsFeedCtrl\",\n            controllerAs: \"feed\"\n        };\n    }]);\n\n    module.directive('advertsFilter', [function () {\n\n        return {\n            restrict: 'AE',\n            templateUrl: templatesFolder + \"/adverts-filter.html\",\n            scope: {\n                filter_fields: \"=feedFilter\"\n            },\n            controller: \"advertsFeedFilterCtrl\",\n            controllerAs: \"filter\"\n        };\n    }]);\n\n    module.directive('advert', [function () {\n\n        return {\n            restrict: 'A',\n            templateUrl: templatesFolder + \"/advert.html\",\n            scope: {\n                advert: \"=\"\n            }\n        };\n    }]);\n\n    module.directive('advertSingle', [function () {\n        return {\n            restrict: 'A',\n            templateUrl: templatesFolder + \"/edit-advert.html\",\n            scope: {\n                advert_id: \"@advertSingle\"\n            },\n            controller: \"editAdvertCtrl\",\n            controllerAs: \"advertEditor\"\n        };\n    }]);\n}\n\n\"use strict\";\n\nfunction popupDirectivesInit(module) {\n    var templatesFolder = \"/assets/templates\";\n\n    module.directive('popup', [\"$http\", function (ajax) {\n\n        return {\n            restrict: 'A',\n            transclude: {\n                \"trigger\": \"popupTrigger\",\n                \"content\": \"popupContent\"\n            },\n            templateUrl: templatesFolder + \"/popup.html\",\n            scope: {\n                type: \"@\"\n            },\n            controller: \"popupCtrl\",\n            controllerAs: \"popup\"\n        };\n    }]);\n}\n\n\"use strict\";\n\nfunction advertControllersInit(module) {\n    var api_base = \"/api/:schema\";\n    var schema = \"advert\";\n\n    module.controller('advertsFeedCtrl', [\"$http\", \"$scope\", \"api\", function (ajax, $scope, api) {\n        var _this = this;\n\n        var adverts = api.generate({\n            options: {\n                api_base: api_base\n            },\n            calls: {\n                get: {\n                    one: {\n                        url: \"/:id\"\n                    },\n                    all: {},\n                    user: {\n                        url: \"/:user_id/adverts\"\n                    }\n                }\n            }\n        });\n\n        this.order = \"-publicationDate\";\n\n        this.getAdverts = function (user_id) {\n            if (!user_id) {\n                adverts.all({ schema: schema }).then(function (response) {\n                    if (response.data.adverts) {\n                        _this.adverts = response.data.adverts;\n                    }\n                }).catch(function (err) {\n                    console.log(err);\n                });\n            } else {\n                adverts.user({\n                    user_id: user_id,\n                    schema: \"advertiser\"\n                }).then(function (response) {\n                    if (response.data.adverts) {\n                        _this.adverts = response.data.adverts;\n                    }\n                }).catch(function (err) {\n                    console.log(err);\n                });\n            }\n        };\n\n        this.getAdverts($scope.user_id);\n    }]);\n\n    module.controller('advertsFeedFilterCtrl', [function () {\n        this.defaults = {\n            gender: \"\",\n            type: \"\"\n        };\n    }]);\n\n    module.controller('newAdvertCtrl', [\"api\", function (api) {\n        var _this2 = this;\n\n        var adverts = api.generate({\n            options: {\n                api_base: api_base\n            },\n            calls: {\n                post: {\n                    create: {}\n                }\n            }\n        });\n\n        this.advert = {\n            gender: \"boy\",\n            type: \"dog\",\n            age: 1\n        };\n        this.create = function () {\n            adverts.create({ schema: schema, data: _this2.advert }).then(function (response) {\n                if (response.data.success) {\n                    document.location.href = \"/advert/\" + response.data.advert._id;\n                }\n            }).catch(function (err) {\n                console.log(err);\n            });\n        };\n    }]);\n\n    module.controller('editAdvertCtrl', [\"$scope\", \"api\", function ($scope, api) {\n        var _this3 = this;\n\n        var adverts = api.generate({\n            options: {\n                api_base: api_base\n            },\n            calls: {\n                get: {\n                    get: {\n                        url: \"/:id\"\n                    }\n                },\n                put: {\n                    update: {\n                        url: \"/:id\"\n                    }\n                }\n            }\n        });\n\n        var current_advert = {};\n        this.save = function () {\n            adverts.update({ schema: schema, id: $scope.advert_id, data: _this3.advert }).then(function (response) {\n                if (response.data.success && response.data.advert) {\n                    _this3.advert = response.data.advert;\n                    if (_this3.advert.age) {\n                        _this3.advert.age = parseInt(_this3.advert.age);\n                    }\n                    current_advert = JSON.parse(JSON.stringify(_this3.advert));\n                }\n            }).catch(function (err) {\n                console.log(err);\n            });\n        };\n        this.reset = function () {\n            _this3.advert = JSON.parse(JSON.stringify(current_advert));\n        };\n\n        adverts.get({ schema: schema, id: $scope.advert_id }).then(function (response) {\n            if (response.data.success && response.data.advert) {\n                _this3.advert = response.data.advert;\n                if (_this3.advert.age) {\n                    _this3.advert.age = parseInt(_this3.advert.age);\n                }\n                current_advert = JSON.parse(JSON.stringify(_this3.advert));\n            }\n        }).catch(function (err) {\n            console.log(err);\n        });\n    }]);\n\n    module.controller('advertRemoveCtrl', [\"$scope\", \"api\", function ($scope, api) {\n\n        var adverts = api.generate({\n            options: {\n                api_base: api_base\n            },\n            calls: {\n                get: {\n                    remove: {\n                        url: \"/:id/delete\"\n                    }\n                }\n            }\n        });\n\n        this.remove = function (id) {\n            adverts.remove({ id: id, schema: schema }).then(function (response) {\n                if (response.data.success && response.data.redirect) {\n                    document.location.href = response.data.redirect;\n                } else if (response.data.message) {\n                    console.log(response.data);\n                }\n            }).catch(function (err) {\n                console.log(err);\n            });\n        };\n\n        this.cancel = function () {\n            $scope.$parent.$parent.popup.active = false;\n        };\n    }]);\n}\n\n\"use strict\";\n\nfunction advertiserControllersInit(module) {\n\n    module.controller('advertiserRemoveCtrl', [\"advertiser\", \"$scope\", function (advertiser, $scope) {\n        this.remove = function (_id) {\n            advertiser.remove(_id).then(function (response) {\n                if (response.data.success) {\n                    document.location.href = \"/\";\n                }\n            }).catch(function (err) {\n                console.log(err);\n            });\n        };\n        this.cancel = function () {\n            $scope.$parent.$parent.popup.active = false;\n        };\n    }]);\n}\n\n\"use strict\";\nfunction authControllersInit(module) {\n\n    module.controller('authCtrl', [\"$scope\", \"$timeout\", \"authService\", function ($scope, $timeout, authService) {\n        var _this4 = this;\n\n        this.emailRegex = /^[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/i;\n        this.passwordRegex = /.*\\S.*/;\n\n        this.checkForm = function (form) {\n            _this4.error = !$scope[form].$valid;\n            _this4.validClass = $scope[form].$valid ? \"valid\" : \"error\";\n        };\n\n        this.submit = function (form) {\n            $scope[form].email.$setTouched();\n            $scope[form].password.$setTouched();\n\n            if ($scope[form].$valid) {\n\n                authService.authenticate(form, { email: _this4.email, password: _this4.password }).then(function (response) {\n                    if (response.data.success) {\n                        $timeout(function () {\n                            _this4.responseClass = \"success\";\n                            document.location.reload();\n                        }, 2000);\n                    } else {\n                        console.log($scope[form] + \": failed\");\n                        console.log(response);\n                    }\n                }).catch(function (err) {\n                    if (!err.data.success) {\n                        $timeout(function () {\n                            _this4.responseClass = \"fail\";\n                        }, 500);\n                        console.log(err.data.message);\n                    } else {\n                        console.log(err);\n                    }\n                });\n            } else {\n                console.log($scope[form] + \" form invalid\");\n            }\n        };\n\n        this.reset = function () {\n            _this4.error = false;\n            _this4.validClass = '';\n            _this4.responseClass = '';\n        };\n    }]);\n\n    module.controller('logoutCtrl', [\"authService\", function (authService) {\n\n        this.logout = function () {\n\n            authService.authenticate('logout').then(function (response) {\n                if (response.data.success) {\n                    document.location.reload();\n                } else {\n                    console.log(response.data.message);\n                }\n            }).catch(function (err) {\n                console.log(err);\n            });\n        };\n    }]);\n}\n\"use strict\";\n\nfunction popupControllersInit(module) {\n\n    module.controller('popupCtrl', [function () {\n        this.active = false;\n    }]);\n}\n\"use strict\";\n\nfunction profileControllersInit(module) {\n\n    module.controller('profileSettingsCtrl', [\"advertiser\", function (advertiser) {}]);\n}","\"use strict\";\r\n\r\nfunction getModules () {\r\n    return {\r\n        services : angular.module(\"services\", []),\r\n        auth : angular.module(\"auth\", []),\r\n        popup : angular.module(\"popup\", []),\r\n        advert : angular.module(\"advert\", []),\r\n        advertiser : angular.module(\"advertiser\", []),\r\n        profile : angular.module(\"profile\", []),\r\n        app : angular.module(\"app\", [ \"services\", \"auth\", \"popup\", \"advert\", \"advertiser\", \"profile\" ])\r\n    };\r\n}","\"use strict\";\r\n\r\nfunction advertServicesInit ( module ) {\r\n    module.factory('adverts', [\r\n        \"$http\", ( ajax ) => {\r\n\r\n            const getRequestData = ( data ) => {\r\n                const requestData = {};\r\n                const api_base = \"/api/advert\";\r\n\r\n                switch ( data.type ) {\r\n                    case \"get\" :\r\n                        requestData.method = \"get\";\r\n                        requestData.url = `${api_base}/${data._id}`;\r\n                        break;\r\n                    case \"getAll\" :\r\n                        requestData.method = \"get\";\r\n                        requestData.url = api_base;\r\n                        break;\r\n                    case \"update\" :\r\n                        requestData.method = \"put\";\r\n                        requestData.url = `${api_base}/${data._id}`;\r\n                        break;\r\n                    case \"create\" :\r\n                        requestData.method = \"post\";\r\n                        requestData.url = `${api_base}`;\r\n                        break;\r\n                    case \"remove\" :\r\n                        requestData.method = \"get\";\r\n                        requestData.url = `${api_base}/${data._id}/delete`;\r\n                        break;\r\n                }\r\n\r\n                if ( data.requestData ) {\r\n                    requestData.data = data.requestData;\r\n                }\r\n\r\n                return requestData;\r\n            };\r\n\r\n            const makeApiCall = ( data ) => {\r\n                const requestData = getRequestData(data);\r\n\r\n                return ajax(requestData);\r\n            };\r\n\r\n            const get = ( _id ) => {\r\n                return makeApiCall({ type : \"get\", _id })\r\n            };\r\n\r\n            const getAll = () => {\r\n                return makeApiCall({ type : \"getAll\" });\r\n            };\r\n\r\n            const create = ( requestData ) => {\r\n                return makeApiCall({ type : \"create\", requestData });\r\n            };\r\n\r\n            const update = ( _id, requestData ) => {\r\n                return makeApiCall({ type : \"update\", _id, requestData });\r\n            };\r\n\r\n            const remove = ( _id ) => {\r\n                return makeApiCall({ type : \"remove\", _id });\r\n            };\r\n\r\n            return {\r\n                get,\r\n                getAll,\r\n                create,\r\n                update,\r\n                remove\r\n            };\r\n        }\r\n    ]);\r\n}","\"use strict\";\r\n\r\nfunction advertiserServicesInit ( module ) {\r\n    module.factory('advertiser', [\r\n        \"$http\", ( $http ) => {\r\n\r\n            const getRequestData = ( data ) => {\r\n                const requestData = {};\r\n                const apiBase = \"/api/advertiser\";\r\n\r\n                switch ( data.type ) {\r\n                    case \"get\" :\r\n                        break;\r\n                    case \"update\" :\r\n                        break;\r\n                    case \"remove\" :\r\n                        requestData.method = \"GET\";\r\n                        requestData.url = `${apiBase}/${data.id}/delete`;\r\n                        break;\r\n                }\r\n\r\n                if ( data.bodyData ) {\r\n                    requestData.data = data.bodyData;\r\n                }\r\n\r\n                return requestData;\r\n\r\n            };\r\n\r\n            const makeApiCall = ( data )=> {\r\n                const requestData = getRequestData(data);\r\n                return $http(requestData);\r\n            };\r\n\r\n            const get = () => {\r\n\r\n            };\r\n\r\n            const save = () => {\r\n\r\n            };\r\n\r\n            const remove = ( id ) => {\r\n                return makeApiCall({type : \"remove\", id});\r\n            };\r\n\r\n            const update = () => {\r\n\r\n            };\r\n\r\n            return {\r\n                get,\r\n                save,\r\n                remove,\r\n                update\r\n            }\r\n        }\r\n    ]);\r\n}","\"use strict\";\r\n\r\nfunction apiGenServicesInit ( module ) {\r\n    module.factory(\"api\", [\r\n        \"$http\", ( ajax ) => {\r\n            let options = {\r\n                api_base : \"\",\r\n                url : \"\"\r\n            };\r\n\r\n            let calls = {};\r\n\r\n            const generateCall = ( method, call_options ) => {\r\n                method = method.toUpperCase();\r\n                call_options.url = call_options.url || options.url;\r\n\r\n                let requestData = {\r\n                    method,\r\n                    url : `${options.api_base}${call_options.url}`\r\n                };\r\n\r\n                return ( params ) => {\r\n\r\n                    for ( let param in params ) {\r\n                        if ( params.hasOwnProperty(param) ) {\r\n                            if ( param !== \"data\" ) {\r\n                                requestData.url = requestData.url.replace(`:${param}`, params[ param ]);\r\n                            } else if ( method !== \"GET\" ) {\r\n                                requestData.data = params[ param ];\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return ajax(requestData);\r\n                };\r\n            };\r\n\r\n            const generate = ( settings ) => {\r\n                for ( let option in settings.options ) {\r\n                    if ( settings.options.hasOwnProperty(option) ) {\r\n                        options[ option ] = settings.options[ option ];\r\n                    }\r\n                }\r\n\r\n                for ( let method in settings.calls ) {\r\n                    if ( settings.calls.hasOwnProperty(method) ) {\r\n                        for ( let call in settings.calls[ method ] ) {\r\n                            if ( settings.calls[ method ].hasOwnProperty(call) ) {\r\n                                calls[ call ] = generateCall(method, settings.calls[ method ][ call ]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return calls;\r\n            };\r\n\r\n            return {\r\n                generate\r\n            };\r\n        }\r\n    ]);\r\n}","\"use strict\";\r\n\r\nfunction authServicesInit ( module ) {\r\n    module.factory('authService', [\r\n        \"$http\", ( $http ) => {\r\n\r\n            const getRequestData = ( type, data ) => {\r\n                const requestData = {};\r\n\r\n                switch ( type ) {\r\n                    case \"login\" :\r\n                        requestData.method = \"POST\";\r\n                        requestData.url = \"/auth/login\";\r\n                        break;\r\n                    case \"registration\" :\r\n                        requestData.method = \"POST\";\r\n                        requestData.url = \"/auth\";\r\n                        break;\r\n                    case \"logout\" :\r\n                        requestData.method = \"GET\";\r\n                        requestData.url = \"/auth/logout\";\r\n                        break;\r\n                }\r\n\r\n                if ( data ) {\r\n                    requestData.data = data;\r\n                }\r\n\r\n                return requestData;\r\n\r\n            };\r\n\r\n            const authenticate = ( type, data ) => {\r\n\r\n                const requestData = getRequestData(type, data);\r\n\r\n                return new Promise(( resolve, reject ) => {\r\n                    $http(requestData)\r\n                        .then(( response ) => {\r\n                            resolve(response);\r\n                        })\r\n                        .catch(( err ) => {\r\n                            reject(err);\r\n                        });\r\n                });\r\n            };\r\n\r\n            return {\r\n                authenticate\r\n            }\r\n        }\r\n    ]);\r\n}","\"use strict\";\r\n\r\nfunction advertDirectivesInit ( module ) {\r\n    const templatesFolder = \"/assets/templates\";\r\n\r\n    module.directive('advertsFeed', [\r\n        function () {\r\n\r\n            return {\r\n                restrict : 'A',\r\n                templateUrl : `${templatesFolder}/adverts-feed.html`,\r\n                scope : {\r\n                    user_id : \"@advertsFeed\",\r\n                    filter_enabled : \"=enableFilter\"\r\n                },\r\n                controller : \"advertsFeedCtrl\",\r\n                controllerAs : \"feed\"\r\n            };\r\n        }\r\n    ]);\r\n\r\n    module.directive('advertsFilter', [\r\n        function () {\r\n\r\n            return {\r\n                restrict : 'AE',\r\n                templateUrl : `${templatesFolder}/adverts-filter.html`,\r\n                scope : {\r\n                    filter_fields : \"=feedFilter\"\r\n                },\r\n                controller : \"advertsFeedFilterCtrl\",\r\n                controllerAs : \"filter\"\r\n            };\r\n        }\r\n    ]);\r\n\r\n    module.directive('advert', [\r\n        function () {\r\n\r\n            return {\r\n                restrict : 'A',\r\n                templateUrl : `${templatesFolder}/advert.html`,\r\n                scope : {\r\n                    advert : \"=\"\r\n                }\r\n            };\r\n        }\r\n    ]);\r\n\r\n    module.directive('advertSingle', [\r\n        function () {\r\n            return {\r\n                restrict : 'A',\r\n                templateUrl : `${templatesFolder}/edit-advert.html`,\r\n                scope : {\r\n                    advert_id : \"@advertSingle\"\r\n                },\r\n                controller : \"editAdvertCtrl\",\r\n                controllerAs : \"advertEditor\"\r\n            };\r\n        }\r\n    ]);\r\n}\r\n","\"use strict\";\r\n\r\nfunction popupDirectivesInit ( module ) {\r\n    const templatesFolder = \"/assets/templates\";\r\n\r\n    module.directive('popup', [\r\n        \"$http\",\r\n        function ( ajax ) {\r\n\r\n            return {\r\n                restrict : 'A',\r\n                transclude : {\r\n                    \"trigger\" : \"popupTrigger\",\r\n                    \"content\" : \"popupContent\"\r\n                },\r\n                templateUrl : `${templatesFolder}/popup.html`,\r\n                scope : {\r\n                    type : \"@\"\r\n                },\r\n                controller : \"popupCtrl\",\r\n                controllerAs : \"popup\"\r\n            };\r\n        }\r\n    ]);\r\n}\r\n","\"use strict\";\r\n\r\nfunction advertControllersInit ( module ) {\r\n    const api_base = \"/api/:schema\";\r\n    const schema = \"advert\";\r\n\r\n    module.controller('advertsFeedCtrl', [\r\n        \"$http\", \"$scope\", \"api\",\r\n        function ( ajax, $scope, api ) {\r\n            const adverts = api.generate({\r\n                options : {\r\n                    api_base\r\n                },\r\n                calls : {\r\n                    get : {\r\n                        one : {\r\n                            url : \"/:id\"\r\n                        },\r\n                        all : {},\r\n                        user : {\r\n                            url : \"/:user_id/adverts\"\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.order = \"-publicationDate\";\r\n\r\n            this.getAdverts = ( user_id ) => {\r\n                if ( !user_id ) {\r\n                    adverts.all({ schema })\r\n                           .then(( response ) => {\r\n                               if ( response.data.adverts ) {\r\n                                   this.adverts = response.data.adverts;\r\n                               }\r\n                           })\r\n                           .catch(( err ) => {\r\n                                   console.log(err);\r\n                               }\r\n                           );\r\n                } else {\r\n                    adverts.user({\r\n                        user_id,\r\n                        schema : \"advertiser\"\r\n                    }).then(( response ) => {\r\n                        if ( response.data.adverts ) {\r\n                            this.adverts = response.data.adverts;\r\n                        }\r\n                    }).catch(( err ) => {\r\n                        console.log(err);\r\n                    });\r\n                }\r\n            };\r\n\r\n            this.getAdverts($scope.user_id);\r\n        }\r\n    ]);\r\n\r\n    module.controller('advertsFeedFilterCtrl', [\r\n        function () {\r\n            this.defaults = {\r\n                gender : \"\",\r\n                type : \"\",\r\n            };\r\n        }\r\n    ]);\r\n\r\n    module.controller('newAdvertCtrl', [\r\n        \"api\",\r\n        function ( api ) {\r\n            const adverts = api.generate({\r\n                options : {\r\n                    api_base\r\n                },\r\n                calls : {\r\n                    post : {\r\n                        create : {}\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.advert = {\r\n                gender : \"boy\",\r\n                type : \"dog\",\r\n                age : 1\r\n            };\r\n            this.create = () => {\r\n                adverts.create({ schema, data : this.advert })\r\n                       .then(( response ) => {\r\n                           if ( response.data.success ) {\r\n                               document.location.href = `/advert/${response.data.advert._id}`;\r\n                           }\r\n                       })\r\n                       .catch(( err ) => {\r\n                           console.log(err);\r\n                       });\r\n            };\r\n        }\r\n    ]);\r\n\r\n    module.controller('editAdvertCtrl', [\r\n        \"$scope\", \"api\",\r\n        function ( $scope, api ) {\r\n            const adverts = api.generate({\r\n                options : {\r\n                    api_base\r\n                },\r\n                calls : {\r\n                    get : {\r\n                        get : {\r\n                            url : \"/:id\"\r\n                        }\r\n                    },\r\n                    put : {\r\n                        update : {\r\n                            url : \"/:id\"\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            let current_advert = {};\r\n            this.save = () => {\r\n                adverts.update({ schema, id : $scope.advert_id, data : this.advert })\r\n                       .then(( response ) => {\r\n                           if ( response.data.success && response.data.advert ) {\r\n                               this.advert = response.data.advert;\r\n                               if ( this.advert.age ) {\r\n                                   this.advert.age = parseInt(this.advert.age);\r\n                               }\r\n                               current_advert = JSON.parse(JSON.stringify(this.advert));\r\n                           }\r\n                       })\r\n                       .catch(( err ) => {\r\n                           console.log(err);\r\n                       });\r\n            };\r\n            this.reset = () => {\r\n                this.advert = JSON.parse(JSON.stringify(current_advert));\r\n            };\r\n\r\n            adverts.get({ schema, id : $scope.advert_id })\r\n                   .then(( response ) => {\r\n                       if ( response.data.success && response.data.advert ) {\r\n                           this.advert = response.data.advert;\r\n                           if ( this.advert.age ) {\r\n                               this.advert.age = parseInt(this.advert.age);\r\n                           }\r\n                           current_advert = JSON.parse(JSON.stringify(this.advert));\r\n                       }\r\n                   })\r\n                   .catch(( err ) => {\r\n                       console.log(err);\r\n                   });\r\n        }\r\n    ]);\r\n\r\n    module.controller('advertRemoveCtrl', [\r\n        \"$scope\", \"api\",\r\n        function ( $scope, api ) {\r\n\r\n            const adverts = api.generate({\r\n                options : {\r\n                    api_base\r\n                },\r\n                calls : {\r\n                    get : {\r\n                        remove : {\r\n                            url : \"/:id/delete\"\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.remove = ( id ) => {\r\n                adverts.remove({ id, schema })\r\n                       .then(( response ) => {\r\n                           if ( response.data.success && response.data.redirect ) {\r\n                               document.location.href = response.data.redirect;\r\n                           } else if ( response.data.message ) {\r\n                               console.log(response.data);\r\n                           }\r\n                       })\r\n                       .catch(( err ) => {\r\n                           console.log(err);\r\n                       });\r\n            };\r\n\r\n            this.cancel = () => {\r\n                $scope.$parent.$parent.popup.active = false;\r\n            };\r\n        }\r\n    ]);\r\n}\r\n","\"use strict\";\r\n\r\nfunction advertiserControllersInit ( module ) {\r\n\r\n    module.controller('advertiserRemoveCtrl', [\r\n        \"advertiser\", \"$scope\",\r\n        function ( advertiser, $scope ) {\r\n            this.remove = ( _id ) => {\r\n                advertiser.remove(_id)\r\n                          .then(( response ) => {\r\n                              if ( response.data.success ) {\r\n                                  document.location.href = \"/\";\r\n                              }\r\n                          })\r\n                          .catch(( err ) => {\r\n                              console.log(err);\r\n                          });\r\n            };\r\n            this.cancel = () => {\r\n                $scope.$parent.$parent.popup.active = false;\r\n            };\r\n        }\r\n    ]);\r\n}\r\n","\"use strict\";\r\nfunction authControllersInit ( module ) {\r\n\r\n    module.controller('authCtrl', [\r\n        \"$scope\", \"$timeout\", \"authService\",\r\n        function ( $scope, $timeout, authService ) {\r\n\r\n            this.emailRegex = /^[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/i;\r\n            this.passwordRegex = /.*\\S.*/;\r\n\r\n            this.checkForm = ( form ) => {\r\n                this.error = !$scope[form].$valid;\r\n                this.validClass = $scope[form].$valid ? \"valid\" : \"error\";\r\n            };\r\n\r\n            this.submit = ( form ) => {\r\n                $scope[form].email.$setTouched();\r\n                $scope[form].password.$setTouched();\r\n\r\n                if ( $scope[form].$valid ) {\r\n\r\n                    authService.authenticate(form, {email : this.email, password : this.password})\r\n                               .then(( response ) => {\r\n                                   if ( response.data.success ) {\r\n                                       $timeout(() => {\r\n                                           this.responseClass = \"success\";\r\n                                           document.location.reload();\r\n                                       }, 2000);\r\n                                   } else {\r\n                                       console.log(`${$scope[form]}: failed`);\r\n                                       console.log(response);\r\n                                   }\r\n                               })\r\n                               .catch(( err ) => {\r\n                                   if ( !err.data.success ) {\r\n                                       $timeout(() => {\r\n                                           this.responseClass = \"fail\";\r\n                                       }, 500);\r\n                                       console.log(err.data.message);\r\n                                   } else {\r\n                                       console.log(err);\r\n                                   }\r\n                               });\r\n                } else {\r\n                    console.log(`${$scope[form]} form invalid`);\r\n                }\r\n            };\r\n\r\n            this.reset = () => {\r\n                this.error = false;\r\n                this.validClass = '';\r\n                this.responseClass = '';\r\n            };\r\n\r\n        }\r\n    ]);\r\n\r\n    module.controller('logoutCtrl', [\r\n        \"authService\",\r\n        function ( authService ) {\r\n\r\n            this.logout = () => {\r\n\r\n                authService.authenticate('logout')\r\n                           .then(( response ) => {\r\n                               if ( response.data.success ) {\r\n                                   document.location.reload();\r\n                               } else {\r\n                                   console.log(response.data.message);\r\n                               }\r\n                           })\r\n                           .catch(( err ) => {\r\n                               console.log(err);\r\n                           });\r\n\r\n            };\r\n\r\n        }\r\n    ]);\r\n}","\"use strict\";\r\n\r\nfunction popupControllersInit ( module ) {\r\n\r\n    module.controller('popupCtrl', [\r\n        function () {\r\n            this.active = false;\r\n        }\r\n    ])\r\n}","\"use strict\";\r\n\r\nfunction profileControllersInit ( module ) {\r\n\r\n    module.controller('profileSettingsCtrl', [\r\n        \"advertiser\", function (advertiser) {\r\n\r\n        }\r\n    ]);\r\n}"],"sourceRoot":"assets/scripts/"}