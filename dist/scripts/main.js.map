{"version":3,"sources":["main.js","app.js","advert.js","advertiser.js","api.js","auth.js","validate.js","adverts.js","popup.js"],"names":["_classCallCheck","instance","Constructor","TypeError","getModules","services","angular","module","auth","popup","advert","advertiser","app","advertServicesInit","factory","api","generate","options","api_base","calls","GET","get","url","getAll","remove","POST","create","PUT","update","advertiserServicesInit","apiGenServicesInit","ajax","Api","settings","this","_createClass","key","value","method","call_options","toUpperCase","requestData","params","param","hasOwnProperty","replace","data","option","call","generateCall","authServicesInit","$http","getRequestData","type","authenticate","Promise","resolve","reject","then","response","err","validationServicesInit","email","password","advertiserDirectivesInit","templatesFolder","directive","restrict","templateUrl","scope","user_id","edit","controller","controllerAs","user","popupClose","advertDirectivesInit","filter_enabled","filter_fields","advert_id","advertData","popupDirectivesInit","transclude","trigger","content","link","element","attrs","on","event","target","hasClass","$apply","close","advertControllersInit","$scope","adverts","_this","order","getAdverts","console","log","defaults","gender","_this2","age","success","document","location","href","_id","_this3","temporaryData","JSON","parse","stringify","save","id","parseInt","cancel","_this4","current_advert","redirect","message","$parent","active","advertiserControllersInit","_this5","info","_this6","temporary_data","error","authControllersInit","$timeout","authService","validate","_this7","emailRegex","passwordRegex","checkForm","form","$valid","validClass","submit","$setTouched","responseClass","reload","reset","logout","popupControllersInit","_this8","defineProperties","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","prototype","Portfolio","modules","components","index","initComponents","portfolio","init"],"mappings":"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","file":"main.js","sourcesContent":["\"use strict\";\r\n\r\nclass Portfolio {\r\n    constructor ( modules ) {\r\n        this.modules = modules;\r\n    }\r\n\r\n    initComponents ( module, components ) {\r\n        for ( let index = 0; index < components.length; index++ ) {\r\n            components[ index ](this.modules[ module ]);\r\n        }\r\n    }\r\n\r\n    init ( components ) {\r\n        for ( let module in components ) {\r\n            if ( components.hasOwnProperty(module) ) {\r\n                this.initComponents(module, components[ module ]);\r\n            }\r\n        }\r\n    }\r\n}\r\nconst modules = getModules();\r\nconst components = {\r\n    services : [\r\n        apiGenServicesInit,\r\n        authServicesInit,\r\n        validationServicesInit,\r\n        advertiserServicesInit,\r\n        advertServicesInit\r\n    ],\r\n    auth : [\r\n        authControllersInit\r\n    ],\r\n    popup : [\r\n        popupControllersInit,\r\n        popupDirectivesInit\r\n    ],\r\n    advert : [\r\n        advertControllersInit,\r\n        advertDirectivesInit\r\n    ],\r\n    advertiser : [\r\n        advertiserControllersInit,\r\n        advertiserDirectivesInit\r\n    ]\r\n};\r\n\r\nconst portfolio = new Portfolio(modules);\r\n\r\nportfolio.init(components);","\"use strict\";\r\n\r\nfunction getModules () {\r\n    return {\r\n        services : angular.module(\"services\", []),\r\n        auth : angular.module(\"auth\", []),\r\n        popup : angular.module(\"popup\", []),\r\n        advert : angular.module(\"advert\", []),\r\n        advertiser : angular.module(\"advertiser\", []),\r\n        app : angular.module(\"app\", [ \"services\", \"auth\", \"popup\", \"advert\", \"advertiser\" ])\r\n    };\r\n}","\"use strict\";\r\n\r\nfunction advertControllersInit ( module ) {\r\n\r\n    module.controller('advertsFeedCtrl', [\r\n        \"$http\", \"$scope\", \"adverts\",\r\n        function ( ajax, $scope, adverts ) {\r\n            this.order = \"-publicationDate\";\r\n\r\n            this.getAdverts = ( user_id ) => {\r\n                if ( !user_id ) {\r\n                    adverts.getAll()\r\n                           .then(( response ) => {\r\n                               if ( response.data.adverts ) {\r\n                                   this.adverts = response.data.adverts;\r\n                               }\r\n                           })\r\n                           .catch(( err ) => {\r\n                                   console.log(err);\r\n                               }\r\n                           );\r\n\r\n                } else {\r\n                    ajax({\r\n                        method : \"get\",\r\n                        url : `/api/advertiser/${user_id}/adverts`\r\n                    }).then(( response ) => {\r\n                        if ( response.data.adverts ) {\r\n                            this.adverts = response.data.adverts;\r\n                        }\r\n                    }).catch(( err ) => {\r\n                        console.log(err);\r\n                    });\r\n                }\r\n            };\r\n\r\n            this.getAdverts($scope.user_id);\r\n        }\r\n    ]);\r\n\r\n    module.controller('advertsFeedFilterCtrl', [\r\n        function () {\r\n            this.defaults = {\r\n                gender : \"\",\r\n                type : \"\",\r\n            };\r\n        }\r\n    ]);\r\n\r\n    module.controller('newAdvertCtrl', [\r\n        \"adverts\",\r\n        function ( adverts ) {\r\n            this.advert = {\r\n                gender : \"boy\",\r\n                type : \"dog\",\r\n                age : 1\r\n            };\r\n            this.create = () => {\r\n                adverts.create({ data : this.advert })\r\n                       .then(( response ) => {\r\n                           if ( response.data.success ) {\r\n                               document.location.href = `/advert/${response.data.advert._id}`;\r\n                           }\r\n                       })\r\n                       .catch(( err ) => {\r\n                           console.log(err);\r\n                       });\r\n            };\r\n        }\r\n    ]);\r\n\r\n    module.controller('editAdvertCtrl', [\r\n        \"$scope\", \"adverts\",\r\n        function ( $scope, adverts ) {\r\n\r\n            this.temporaryData = JSON.parse(JSON.stringify($scope.advertData));\r\n\r\n            this.save = () => {\r\n                adverts.update({ id : $scope.advertData._id, data : this.temporaryData })\r\n                       .then(( response ) => {\r\n                           if ( response.data.success && response.data.advert ) {\r\n                               $scope.advertData = response.data.advert;\r\n                               if ( $scope.advertData.age ) {\r\n                                   $scope.advertData.age = parseInt($scope.advertData.age);\r\n                               }\r\n                               $scope.popupClose();\r\n                           }\r\n                       })\r\n                       .catch(( err ) => {\r\n                           console.log(err);\r\n                       });\r\n            };\r\n            this.cancel = () => {\r\n                this.temporaryData = JSON.parse(JSON.stringify($scope.advertData));\r\n            };\r\n        }\r\n    ]);\r\n\r\n\r\n    module.controller('advertCtrl', [\r\n        \"$scope\", \"adverts\",\r\n        function ( $scope, adverts ) {\r\n\r\n            let current_advert = {};\r\n\r\n            adverts.get({ id : $scope.advert_id })\r\n                   .then(( response ) => {\r\n                       if ( response.data.success && response.data.advert ) {\r\n                           this.advertData = response.data.advert;\r\n                           if ( this.advertData.age ) {\r\n                               this.advertData.age = parseInt(this.advertData.age);\r\n                           }\r\n                           current_advert = JSON.parse(JSON.stringify(this.advertData));\r\n                       }\r\n                   })\r\n                   .catch(( err ) => {\r\n                       console.log(err);\r\n                   });\r\n        }\r\n    ]);\r\n\r\n    module.controller('advertRemoveCtrl', [\r\n        \"$scope\", \"adverts\",\r\n        function ( $scope, adverts ) {\r\n            this.remove = ( id ) => {\r\n                adverts.remove({ id })\r\n                       .then(( response ) => {\r\n                           if ( response.data.success && response.data.redirect ) {\r\n                               document.location.href = response.data.redirect;\r\n                           } else if ( response.data.message ) {\r\n                               console.log(response.data);\r\n                           }\r\n                       })\r\n                       .catch(( err ) => {\r\n                           console.log(err);\r\n                       });\r\n            };\r\n            this.cancel = () => {\r\n                $scope.$parent.$parent.popup.active = false;\r\n            };\r\n        }\r\n    ]);\r\n}\r\n","\"use strict\";\r\n\r\nfunction advertiserControllersInit ( module ) {\r\n\r\n    module.controller('advertiserCtrl', [\r\n        \"advertiser\", \"$scope\",\r\n        function ( advertiser, $scope ) {\r\n            advertiser.get({ id : $scope.user_id })\r\n                      .then(( response ) => {\r\n                          if ( response.data.success ) {\r\n                              this.info = response.data.advertiser;\r\n                          }\r\n                      })\r\n                      .catch(( response ) => {\r\n                          console.log(response);\r\n                      });\r\n        }\r\n    ]);\r\n    module.controller('advertiserEditCtrl', [\r\n        \"advertiser\", \"$scope\",\r\n        function ( advertiser, $scope ) {\r\n\r\n            this.temporary_data = JSON.parse(JSON.stringify($scope.user));\r\n\r\n            this.cancel = () => {\r\n                this.temporary_data = JSON.parse(JSON.stringify($scope.user));\r\n            };\r\n\r\n            this.edit = () => {\r\n                advertiser.update({ id : $scope.user._id, data : this.temporary_data })\r\n                          .then(( response )=> {\r\n                              if ( response.data.success ) {\r\n                                  $scope.user = JSON.parse(JSON.stringify(this.temporary_data));\r\n                              }\r\n                          })\r\n                          .catch(( error )=> {\r\n                             console.log(error);\r\n                          });\r\n            };\r\n        }\r\n    ]);\r\n\r\n    module.controller('advertiserRemoveCtrl', [\r\n        \"advertiser\", \"$scope\",\r\n        function ( advertiser, $scope ) {\r\n            this.remove = () => {\r\n                advertiser.remove({id : $scope.user._id})\r\n                          .then(( response ) => {\r\n                              if ( response.data.success ) {\r\n                                  document.location.href = \"/\";\r\n                              }\r\n                          })\r\n                          .catch(( err ) => {\r\n                              console.log(err);\r\n                          });\r\n            };\r\n        }\r\n    ]);\r\n}\r\n","\"use strict\";\r\n\r\nfunction apiGenServicesInit ( module ) {\r\n    module.factory(\"api\", [\r\n        \"$http\",\r\n        function ( ajax ) {\r\n\r\n            class Api {\r\n                constructor (settings) {\r\n                    this.options = {\r\n                        api_base : \"\",\r\n                        url : \"\"\r\n                    };\r\n\r\n                    this.calls = {};\r\n\r\n                    return this.generate(settings);\r\n                }\r\n\r\n                generateCall ( method, call_options ) {\r\n                    method = method.toUpperCase();\r\n                    call_options.url = call_options.url || this.options.url;\r\n\r\n                    let requestData = {\r\n                        method,\r\n                        url : `${this.options.api_base}${call_options.url}`\r\n                    };\r\n\r\n                    return ( params ) => {\r\n\r\n                        for ( let param in params ) {\r\n                            if ( params.hasOwnProperty(param) ) {\r\n                                if ( param !== \"data\" ) {\r\n                                    requestData.url = requestData.url.replace(`:${param}`, params[ param ]);\r\n                                } else if ( method !== \"GET\" ) {\r\n                                    requestData.data = params[ param ];\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        return ajax(requestData);\r\n                    };\r\n                }\r\n\r\n                generate ( settings ) {\r\n                    for ( let option in settings.options ) {\r\n                        if ( settings.options.hasOwnProperty(option) ) {\r\n                            this.options[ option ] = settings.options[ option ];\r\n                        }\r\n                    }\r\n\r\n                    for ( let method in settings.calls ) {\r\n                        if ( settings.calls.hasOwnProperty(method) ) {\r\n                            for ( let call in settings.calls[ method ] ) {\r\n                                if ( settings.calls[ method ].hasOwnProperty(call) ) {\r\n                                    this.calls[ call ] = this.generateCall(method, settings.calls[ method ][ call ]);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this.calls;\r\n                }\r\n            }\r\n\r\n            const generate = function ( settings ) {\r\n                return new Api(settings);\r\n            };\r\n\r\n            return {\r\n                generate\r\n            }\r\n        }\r\n    ]);\r\n}","\"use strict\";\r\nfunction authControllersInit ( module ) {\r\n\r\n    module.controller('authCtrl', [\r\n        \"$scope\", \"$timeout\", \"authService\", \"validate\",\r\n        function ( $scope, $timeout, authService, validate ) {\r\n\r\n            this.emailRegex = validate.email();\r\n            this.passwordRegex = validate.password();\r\n\r\n            this.checkForm = ( form ) => {\r\n                this.error = !$scope[form].$valid;\r\n                this.validClass = $scope[form].$valid ? \"valid\" : \"error\";\r\n            };\r\n\r\n            this.submit = ( form ) => {\r\n                $scope[form].email.$setTouched();\r\n                $scope[form].password.$setTouched();\r\n\r\n                if ( $scope[form].$valid ) {\r\n\r\n                    authService.authenticate(form, {email : this.email, password : this.password})\r\n                               .then(( response ) => {\r\n                                   if ( response.data.success ) {\r\n                                       $timeout(() => {\r\n                                           this.responseClass = \"success\";\r\n                                           document.location.reload();\r\n                                       }, 2000);\r\n                                   } else {\r\n                                       console.log(`${$scope[form]}: failed`);\r\n                                       console.log(response);\r\n                                   }\r\n                               })\r\n                               .catch(( err ) => {\r\n                                   if ( !err.data.success ) {\r\n                                       $timeout(() => {\r\n                                           this.responseClass = \"fail\";\r\n                                       }, 500);\r\n                                       console.log(err.data.message);\r\n                                   } else {\r\n                                       console.log(err);\r\n                                   }\r\n                               });\r\n                } else {\r\n                    console.log(`${$scope[form]} form invalid`);\r\n                }\r\n            };\r\n\r\n            this.reset = () => {\r\n                this.error = false;\r\n                this.validClass = '';\r\n                this.responseClass = '';\r\n            };\r\n\r\n        }\r\n    ]);\r\n\r\n    module.controller('logoutCtrl', [\r\n        \"authService\",\r\n        function ( authService ) {\r\n\r\n            this.logout = () => {\r\n\r\n                authService.authenticate('logout')\r\n                           .then(( response ) => {\r\n                               if ( response.data.success ) {\r\n                                   document.location.reload();\r\n                               } else {\r\n                                   console.log(response.data.message);\r\n                               }\r\n                           })\r\n                           .catch(( err ) => {\r\n                               console.log(err);\r\n                           });\r\n\r\n            };\r\n\r\n        }\r\n    ]);\r\n}","\"use strict\";\r\n\r\nfunction validationServicesInit ( module ) {\r\n    module.factory('validate', [\r\n        function () {\r\n            const email = function (  ) {\r\n                return /^[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/i;\r\n            };\r\n\r\n            const password = function (  ) {\r\n                return /.*\\S.*/;\r\n            };\r\n\r\n\r\n            return {\r\n                email,\r\n                password\r\n            }\r\n\r\n        }\r\n    ])\r\n}","\"use strict\";\r\n\r\nfunction advertDirectivesInit ( module ) {\r\n    const templatesFolder = \"/assets/templates\";\r\n\r\n    module.directive('advertsFeed', [\r\n        function () {\r\n\r\n            return {\r\n                restrict : 'A',\r\n                templateUrl : `${templatesFolder}/adverts-feed.html`,\r\n                scope : {\r\n                    user_id : \"@advertsFeed\",\r\n                    filter_enabled : \"=enableFilter\"\r\n                },\r\n                controller : \"advertsFeedCtrl\",\r\n                controllerAs : \"feed\"\r\n            };\r\n        }\r\n    ]);\r\n\r\n    module.directive('advertsFilter', [\r\n        function () {\r\n\r\n            return {\r\n                restrict : 'AE',\r\n                templateUrl : `${templatesFolder}/adverts-filter.html`,\r\n                scope : {\r\n                    filter_fields : \"=feedFilter\"\r\n                },\r\n                controller : \"advertsFeedFilterCtrl\",\r\n                controllerAs : \"filter\"\r\n            };\r\n        }\r\n    ]);\r\n\r\n    module.directive('advert', [\r\n        function () {\r\n\r\n            return {\r\n                restrict : 'A',\r\n                templateUrl : `${templatesFolder}/advert.html`,\r\n                scope : {\r\n                    advert : \"=\"\r\n                }\r\n            };\r\n        }\r\n    ]);\r\n\r\n    module.directive('advertSingle', [\r\n        function () {\r\n            return {\r\n                restrict : 'A',\r\n                templateUrl : `${templatesFolder}/advert-data.html`,\r\n                scope : {\r\n                    advert_id : \"@advertSingle\"\r\n                },\r\n                controller : \"advertCtrl\",\r\n                controllerAs : \"advert\"\r\n            };\r\n        }\r\n    ]);\r\n\r\n    module.directive('advertEdit', [\r\n        function () {\r\n            return {\r\n                restrict : 'A',\r\n                templateUrl : `${templatesFolder}/advert-edit.html`,\r\n                scope : {\r\n                    advertData : \"=advertEdit\",\r\n                    popupClose : \"&popupClose\"\r\n                },\r\n                controller : \"editAdvertCtrl\",\r\n                controllerAs : \"advertEditor\"\r\n            };\r\n        }\r\n    ]);\r\n}\r\n","\"use strict\";\r\n\r\nfunction popupControllersInit ( module ) {\r\n\r\n    module.controller('popupCtrl', [\r\n        function () {\r\n\r\n            this.close = () => {\r\n                this.active = false;\r\n            }\r\n\r\n        }\r\n    ])\r\n}"],"sourceRoot":"assets/scripts/"}